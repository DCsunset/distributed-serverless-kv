syntax = "proto3";
package db;

message GetRequest {
    // Empty to get key at location
    string Key = 1;
    uint64 Location = 2;
}
message GetResponse {
    string Value = 1;
}

message SetRequest {
    string Key = 1;
    string Value = 2;
    // Dependent location
    uint64 Dep = 3;
}
message SetResponse {
    // Location of the changes
    uint64 Location = 1;
}

message Node {
    // Parent location
    uint64 Location = 1;
    uint64 Dep = 2;
    string Key = 3;
    string Value = 4;
    repeated uint64 Children = 5;
}

message AddNodeRequest {
    Node Node = 1;
}

message SplitRequest {
    // [L, Mid], [Mid + 1, R]
    uint32 Left = 1;
    uint32 Right = 2;
    uint32 Mid = 3;
    string LeftServer = 4;
    string RightServer = 5;
}

message SetMergeFunctionRequest {
    uint64 location = 1;
    // Action name
    string name = 2;
}

message SetGlobalMergeFunctionRequest {
    // Action name
    string name = 1;
}

message AddChildRequest {
    uint64 Location = 1;
    uint64 Child = 2;
}

message RemoveChildrenRequest {
    uint64 Location = 1;
}

message GetNodeRequest {
    uint64 Location = 1;
}

message Nodes {
    repeated Node nodes = 1;
}

message Empty {}

service DbService {
    rpc RemoveChildren(RemoveChildrenRequest) returns (Empty) {}
    rpc AddChild(AddChildRequest) returns (Node) {}
    rpc GetNode(GetNodeRequest) returns (Node) {}
    rpc Get(GetRequest) returns (GetResponse) {}
    rpc Set(SetRequest) returns (SetResponse) {}
    rpc AddNode(AddNodeRequest) returns (Empty) {}
    rpc Split(SplitRequest) returns (Empty) {}
    rpc SetMergeFunction(SetMergeFunctionRequest) returns (Empty) {}
    rpc SetGlobalMergeFunction(SetGlobalMergeFunctionRequest) returns (Empty) {}
}
