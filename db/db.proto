syntax = "proto3";
package db;

message GetRequest {
    int64 SessionId = 1;
    // Empty to get all keys at location
    repeated string Keys = 2;
    int64 Loc = 3;
    int64 VirtualLoc = 4;
}
message GetResponse {
    // Key-value pairs
    map<string, string> Data = 1;
}

message SetRequest {
    int64 SessionId = 1;
    // Key-value pairs
    map<string, string> Data = 2;
    // Its virtual location (must >= 0 if used, < 0 means not used)
    int64 VirtualLoc = 3;
    // Dependent location
    int64 Dep = 4;
    // Dependent virtual location (must >= 0 if used, < 0 means not used)
    int64 VirtualDep = 5;
}
message SetResponse {
    // Location of the changes
    int64 Loc = 1;
}

message Node {
    // Parent location
    int64 Dep = 1;
    repeated int64 Children = 2;
    map<string, string> Data = 3;
    bytes Digest = 4;
    bytes DataDigest = 5;
}

message UploadRequest {
    // Nodes to append to the location
    repeated Node Nodes = 1;
}
message UploadResponse {
}

message DownloadRequest {
    // Download from locations
    repeated int64 Locations = 1;
}
message DownloadResponse {
    // Nodes from the location
    repeated Node Nodes = 1;
}

message GetMerkleTreeRequest {
    // Tree from location
    int64 Location = 1;
}
message GetMerkleTreeResponse {
    // Nodes (containing only children, digest and dep)
    repeated Node Nodes = 1;
}

service DbService {
    rpc Get(GetRequest) returns (GetResponse) {}
    rpc Set(SetRequest) returns (SetResponse) {}
    rpc Upload(UploadRequest) returns (UploadResponse) {}
    rpc Download(DownloadRequest) returns (DownloadResponse) {}
    rpc GetMerkleTree(GetMerkleTreeRequest) returns (GetMerkleTreeResponse) {}
}
